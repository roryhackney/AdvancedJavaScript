<html lang="en">
    <head>
        <title>Best Dinosaurs</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
        <!-- Don't use this in production: -->
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
        <link rel="stylesheet" href="https://it122.herokuapp.com/styles.css">
    </head>
    <body>
        <p>This is a web app I built with JavaScript, Node, MongoDB, React, and Heroku to learn advanced JavaScript concepts and display some of my favorite dinosaurs. Try clicking your favorite dino and see how the form changes, or check out my API or normal routes!</p>
        <p>You can find more of my work at <a href="https://www.roryhackney.com">roryhackney.com</a> or my GitHub for this project at <a href="https://www.github.com/roryhackney/AdvancedJavaScript">github.com.roryhackney/AdvancedJavaScript</a>.</p>
        <h1>Best Dinosaurs</h1>
        <div id="root"></div>
        <script type="text/babel">
            //const dinos = {{{dinos}}};
            const Dinos = (props) => {
                const listItems = props.data.map((item) =>
                //add id so can access unique key in HTML 
                    <li key={item._id} id={item._id} onClick={props.clickHandler}>{item.name}</li>);
                return <ul>{listItems}</ul>;
            };
            //click event handler pass in event object
            //target: DOM element that was clicked on

            const MyDetails = (props) => {
                /* return <div>
                    <h2>Details</h2>
                    <ul>
                        <li>name: {props.item.name}</li>
                        <li>length: {props.item.length}</li>
                        <li>weight: {props.item.weight}</li>
                        <li>rating: {props.item.cool}</li>
                    </ul>
                </div> */
                return <div>
                    <h2>Details</h2>
                    <form>
                        <label htmlFor="name">Name</label>
                        <input type="text" id="name" name="name" value={props.item.name || ""} onChange={props.handleChange}></input>
                        <label htmlFor="length">Length</label>
                        <input type="text" id="length" name="length" value={props.item.length || ""} onChange={props.handleChange}></input>
                        <label htmlFor="weight">Weight</label>
                        <input type="text" id="weight" name="weight" value={props.item.weight || ""} onChange={props.handleChange}></input>
                        <label htmlFor="cool">Rating</label>
                        <input type="text" id="cool" name="cool" value={props.item.cool || ""} onChange={props.handleChange}></input>
                    </form>
                    <button name="clear" onClick={props.clearForm}>Clear</button>
                    <button name="save" onClick={props.saveItem}>Save</button>
                    <button name="delete" onClick={props.deleteItem}>Delete</button>
                
                </div>
            };

            class DinoApp extends React.Component {
                constructor(props) {
                    //makes it possible to use this
                    super(props);
                    //set initial state using data from server app
                    this.state = {
                        dinos: {{{dinos}}},
                        currentDino: {}
                    };
                    this.selectItem = this.selectItem.bind(this);
                    this.handleChange = this.handleChange.bind(this);
                    this.saveItem = this.saveItem.bind(this);
                    this.deleteItem = this.deleteItem.bind(this);
                }

                selectItem =  (event) => {
                    //const url=<a href={"/detail?name="+item.name}>{item.name}</a>
                    //console.log(event.target.id);
                    //console.log(event.target.innerText);
                    //window.location.href="/detail?name="+event.target.innerText;
                    const found = this.state.dinos.find((item) => {
                        return item.name === event.target.innerText;
                    });
                    this.setState({currentDino: found});
                }

                handleChange = (event) => {
                    let newDino = this.state.currentDino;
                    newDino[event.target.name] = event.target.value;
                    this.setState({currentDino: newDino});
                    //console.log(event.target.name);
                    //console.log(event.target.value);
                    //console.log(this.state.currentDino);
                }

                clearForm = () => {
                    this.setState({currentDino: {}});
                }

                saveItem = () => {
                    //console.log('save');
                    //console.log(this.state.currentDino);
                    //console.log(JSON.stringify(this.state.currentDino));
                    if(JSON.stringify(this.state.currentDino) === '{}'){
                        console.log('empty');
                        return;
                    } else {
                        //console.log('not empty');
                        let change = this.state.currentDino;
                        fetch('/api/dinos/addtesting/', {
                            method: "POST",
                            headers: {'Content-Type':'application/json'},
                            body: JSON.stringify(change)
                        }).then(res => res.json())
                        .then((json) => {
                            console.log(json);
                            if(json.updated === 0){
                                change._id = json._id;
                                let newList = this.state.dinos;
                                newList.push(change);
                                this.setState({dinos: newList, currentDino: {}});
                            }
                        })
                    }
                }
                
                deleteItem = () => {
                    console.log("delete");
                    if(JSON.stringify(this.state.currentDino) === '{}'){
                        console.log('empty');
                        return;
                    }
                    let delId = this.state.currentDino._id;
                    fetch("/api/dinos/delete/" + delId)
                    .then(res => res.json())
                    .then((json) => {
                        console.log(json.deleted);
                        console.log(json.deleted.deletedCount);
                        if(json.deleted.deletedCount > 0){
                            let newList = this.state.dinos.filter(item => {
                                return item._id != delId;
                            });
                            this.setState({dinos: newList, currentDino: {}});
                        }
                        });
                };

                render() {
                    return (
                        <div>
                        <h2>Inventory</h2>
                        <Dinos data={this.state.dinos} clickHandler={this.selectItem} />
                        <MyDetails
                            item={this.state.currentDino}
                            handleChange={this.handleChange}
                            clearForm={this.clearForm}
                            saveItem={this.saveItem}
                            deleteItem={this.deleteItem}
                        />
                        </div>
                    );
                }
            };


            ReactDOM.render( //don't pass functions with name(), just as name
                //<div><Dinos data={dinos} clickHandler={showDetail}/></div>,
                <div>
                    <DinoApp />
                </div>,
                document.getElementById('root')
            );
        </script>
        <a href="static">Static Version</a>
        <a href="about">About Me</a>
        <a href="api/dinos">API: All Dinos</a>
    </body>
</html>